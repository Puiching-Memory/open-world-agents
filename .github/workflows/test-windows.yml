name: Pytest on Windows (common)

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash -el {0}

    env:
      PYTHONIOENCODING: utf-8 # https://github.com/Textualize/rich/issues/212
      # below line is legacy line, but I'm keeping it here for reference to know where the packages are installed
      # GST_PLUGIN_PATH: "D:\\a\\open-world-agents\\open-world-agents\\projects\\owa-env-gst\\gst-plugins"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Cache conda packages
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          # Use faster GNU tar
          enableCrossOsArchive: true
          path: D:\conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-pkgs-${{ env.CACHE_NUMBER }}-${{
            hashFiles('projects/owa-env-gst/environment.yml') }}

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          mamba-version: "*"
          channels: conda-forge
          conda-remove-defaults: "true"
          pkgs-dirs: D:\conda_pkgs_dir
          activate-environment: owa

      - name: Cache conda environment
        uses: actions/cache@v4
        with:
          # Use faster GNU tar
          enableCrossOsArchive: true
          path: ${{ env.CONDA }}/envs
          key:
            conda-env-${{ runner.os }}--${{ runner.arch }}--${{
            steps.get-date.outputs.today }}-${{
            hashFiles('projects/owa-env-gst/environment.yml') }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache-env

      - name: Update environment
        shell: pwsh
        run: mamba env update -n owa -f projects/owa-env-gst/environment.yml
        if: steps.cache-env.outputs.cache-hit != 'true'

      - name: Install the latest version of uv
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Do something if the uv cache was restored
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: echo "uv cache was restored"
    
      # install virtual-uv
      - name: Install virtual-uv
        run: pip install virtual-uv

      - name: Install dependencies
        run: vuv install --dev

      - name: Run pytest (will also pick it up)
        run: pytest

      - name: Install owa-env-example
        run: vuv pip install -e projects/owa-env-example

      - name: Run pytest for owa-env-example
        run: pytest projects/owa-env-example/tests